---
title: "Лабораторная работа №3"
subtitle: "Шифрование гаммированием"
author:
  - name: Каймакджыоглу Мерич Дорук
    email: 1032245391@pfur.ru
    affiliation:
      - name: Российский университет друбы народов
        city: Москва
license: "CC BY"
date: 2025-10-10
---

# Информация

## Докладчик

:::::::::::::: {.columns align=center}
::: {.column width="70%"}

* **Каймакджыоглу Мерич Дорук**
* Студент, кафедра Математического моделирования и искусственного интеллекта (ММиИИ)
* Российский университет дружбы народов
* [1032245391@pfur.ru](mailto:1032245391@pfur.ru)
* <https://github.com/dorukme123>

:::
::: {.column width="30%"}

:::
::::::::::::::

# Вводная часть

## Актуальность

-   Шифрование гаммированием является классическим примером полиалфавитного шифра, демонстрирующим базовые принципы симметричной криптографии.
-   Изучение этого метода позволяет понять концепцию наложения псевдослучайной последовательности (гаммы) на открытый текст.
-   Реализация данного алгоритма наглядно показывает применение модульной арифметики в криптографических преобразованиях.

## Объект и предмет исследования

- **Объект:**  Классические методы симметричного шифрования.
- **Предмет:** Алгоритм шифрования гаммированием с использованием конечной гаммы (ключа-пароля) и его программная реализация.

## Цели и задачи

-   **Цель:** Изучить и реализовать алгоритм шифрования гаммированием.
-   **Задачи:**
    -   Реализовать функцию для шифрования и дешифрования текста.
    -   Обеспечить корректную работу с русским алфавитом.
    -   Решить проблему несоответствия между 1-based индексацией в теории и 0-based в программировании.
    -   Создать единый скрипт для демонстрации работы алгоритма.

## Материалы и методы

- **Язык программирования:** Python.
- **Алгоритмы:** Шифрование гаммированием с циклическим повторением ключа.
- **Структуры данных:** Словари для отображения символов в числа и обратно.

# Теоретические сведения & Реализация

## Шифр гаммированием

-   **Тип:** Полиалфавитный шифр.
-   **Принцип:** На открытый текст посимвольно накладывается гамма (ключ). Операцией наложения является сложение по модулю N, где N — размер алфавита.
-   **Формула шифрования:** `C = (P + K) mod N`
-   **Формула дешифрования:** `P = (C - K) mod N`

## Демонстрация работы

```python
# Определяем 32-буквенный русский алфавит
alphabet = "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ"
N = len(alphabet)

# Словари для преобразования: символ <-> число
charTnum = {char: i for i, char in enumerate(alphabet)}
numTchar = {i: char for i, char in enumerate(alphabet)}

def gammacip(text, key, mode='encrypt'):
    result = ""
    keyindex = 0
    textclean = ''.join(filter(lambda char: char in alphabet, text.upper()))
    keyclean = ''.join(filter(lambda char: char in alphabet, key.upper()))

    for char in textclean:
        textidx = charTnum[char]
        keyidx = charTnum[keyclean[keyindex % len(keyclean)]]
        
        if mode == 'encrypt':
            # +1 для адаптации к 1-based нумерации из задания
            residx = (textidx + keyidx + 1) % N 
        elif mode == 'decrypt':
            # -1 и +N для корректного дешифрования
            residx = (textidx - keyidx - 1 + N) % N 
            
        result += numTchar[residx]
        keyindex += 1
    return result
```
# Результаты

## Демонстрация работы

-   **Пример из лабораторной работы:**
    -   **Текст:** `ПРИКАЗ`
    -   **Ключ (Гамма):** `ГАММА`
    -   **Шифртекст:** `УСХЧБЛ`
    -   **Расшифрованный текст:** `ПРИКАЗ`

## Выводы

- **Задачи выполнены:** Алгоритм шифрования гаммированием был успешно реализован на Python.
- **Навыки:** Получен практический опыт работы с модульной арифметикой и символьными преобразованиями в криптографии.
- **Анализ:** Продемонстрирован основной принцип работы шифра. Была успешно решена проблема адаптации теоретической модели (1-based) к практической реализации (0-based), что является важным аспектом прикладного программирования.